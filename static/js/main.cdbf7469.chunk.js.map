{"version":3,"sources":["components/HeroCard.js","components/Powerstats.js","components/Home.js","components/Spinner.js","components/Login.js","components/SearchCard.js","components/Search.js","components/DetailsInfo.js","components/Details.js","components/PrivateRoute.js","components/BurgerButton.js","components/Navbar.js","components/App.js","index.js"],"names":["HeroCard","props","useState","toDetails","setToDetails","data","localStorage","getItem","arrTeam","JSON","parse","team","map","myHero","index","className","src","image","url","alt","name","onClick","onDetailsClick","onButtonClick","powerstats","power","strength","speed","durability","intelligence","combat","obj","newArray","filter","id","saveTeam","stringify","setItem","updateHome","console","log","length","to","pathname","state","hero","Powerstats","toInt","arg","split","parseInt","height","weight","forEach","push","appearance","maxValue","nameStat","totalHeight","totalWeight","totalStats","reduce","stats","Object","entries","value","flag","Math","round","plugins","ChartDataLabels","labels","datasets","label","barPercentage","categoryPercentage","backgroundColor","borderWidth","borderColor","width","options","maintainAspectRatio","datalabels","color","legend","display","indexAxis","scales","x","grid","ticks","y","font","size","Home","setUpdateHome","Spinner","require","config","Login","loading","setLoading","connectionErr","setConnectionErr","formik","useFormik","initialValues","email","password","onSubmit","values","a","setTimeout","process","axios","post","response","token","navSwitch","validate","errors","class","href","handleSubmit","htmlFor","icon","faAt","type","placeholder","onChange","handleChange","onBlur","handleBlur","faLock","touched","SearchCard","heroObj","error","setError","success","setSuccess","hover","setHover","onMouseOver","onMouseLeave","getHeroes","numHeroes","goodAlignment","badAlignment","heroExist","biography","alignment","storeInLS","Search","displayHeroes","setDisplayHeroes","apiError","setApiError","search","get","arrayHeroes","results","heroes","DetailsInfo","location","useLocation","aliases","work","base","Details","PrivateRoute","user","exac","path","Component","BurgerButton","handleClick","clicked","Navbar","loginPage","setLoginPage","setClicked","removeItem","App","setNav","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.cdbf7469.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './HeroCard.css';\r\n\r\n\r\nconst HeroCard = (props) =>{\r\n\r\n    const[toDetails, setToDetails] = useState('');\r\n    \r\n     //Get from LS\r\n\r\n     const data = localStorage.getItem('team');\r\n     const arrTeam = JSON.parse(data);\r\n\r\n    \r\n\r\n     //Render Heroes\r\n     \r\n     const team = arrTeam.map((myHero,index)=>{\r\n        return (\r\n\r\n            <div key={index} className=\"card\">\r\n<img src={myHero.image.url} alt=\"heroImg\"></img>\r\n<div className=\"info_wrapper\">\r\n    <h5>{myHero.name}</h5>\r\n    {myHero.name? <button className=\"card-link\" onClick={() =>{onDetailsClick(myHero)}}>Details</button>: ''} \r\n    {myHero.name? <button className=\"card-link\" onClick={() =>{onButtonClick(myHero)}}>Remove</button>: ''} \r\n    \r\n</div>\r\n<table>\r\n<tbody>\r\n  <tr>\r\n    <th>{myHero.powerstats.power}</th>\r\n    <th>{myHero.powerstats.strength}</th>\r\n    <th>{myHero.powerstats.speed}</th>\r\n  </tr>\r\n  <tr>\r\n    <td>Power</td>\r\n    <td>Strengh</td>\r\n    <td>Speed</td>\r\n  </tr>\r\n  <tr>\r\n    <th>{myHero.powerstats.durability}</th>\r\n    <th>{myHero.powerstats.intelligence}</th>\r\n    <th>{myHero.powerstats.combat}</th>\r\n  </tr>\r\n  <tr>\r\n    <td>Durab.</td>\r\n    <td>Intel.</td>\r\n    <td>Combat</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n    </div>\r\n\r\n        )\r\n   \r\n    });\r\n\r\n\r\n \r\n     //Helper Function - Remove Hero\r\n \r\n     const onButtonClick = (obj) => {\r\n     \r\n\r\n         const newArray = arrTeam.filter((myHero)=>{\r\n             return myHero.id !== obj.id;\r\n         });\r\n         \r\n         let saveTeam = JSON.stringify(newArray);\r\n         localStorage.setItem('team', saveTeam);\r\n \r\n         \r\n         props.updateHome()\r\n         \r\n     }\r\n\r\n     //Helper Function - Details\r\n\r\n     const onDetailsClick = (obj) =>{\r\n         \r\n         setToDetails(obj);\r\n\r\n     }\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"row d-flex justify-content-center\">\r\n            {console.log(team.length)}\r\n            {team.length === 0? <div className=\"empty_team blink_me\"><h1>Build your team</h1><h5>click on search</h5></div> : team}\r\n            {toDetails? <Redirect to={{\r\n                pathname: '/Details', \r\n                state: {hero: toDetails}\r\n            }}/> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroCard;","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport './Barchart.css';\r\n\r\nconst Powerstats = () => {\r\n\r\n    const powerstats = [];\r\n    const data = localStorage.getItem('team');\r\n    const team = JSON.parse(data);\r\n\r\n\r\n\r\n    const toInt = (arg) => {\r\n        const split = arg.split(' ');\r\n        const number = parseInt(split[0]);\r\n        return number\r\n    }\r\n\r\n    let height = 0;\r\n    let weight = 0;\r\n\r\n    team.forEach((hero) => {\r\n\r\n        powerstats.push(hero.powerstats)\r\n\r\n        // Height & Weight\r\n\r\n        height += toInt(hero.appearance.height[1]);\r\n        weight += toInt(hero.appearance.weight[1]);\r\n\r\n    });\r\n\r\n    const totalHeight = height / team.length;\r\n    const totalWeight = weight / team.length;\r\n\r\n\r\n\r\n    const totalStats = powerstats.reduce((totalStats, stats) => {\r\n        for (const [name, value] of Object.entries(stats)) {\r\n\r\n            if (!totalStats[name]) {\r\n                totalStats[name] = 0\r\n            }\r\n\r\n            totalStats[name] += parseInt(value);\r\n        }\r\n        return totalStats\r\n    }, {});\r\n\r\n\r\n    // Max Stat\r\n\r\n    let flag = 0;\r\n    let maxValue;\r\n    let nameStat;\r\n\r\n    for (const [name, value] of Object.entries(totalStats)) {\r\n\r\n        if (flag === 0) {\r\n            maxValue = value;\r\n            nameStat = name\r\n            flag = 1;\r\n        } else if (maxValue < value) {\r\n            maxValue = value;\r\n            nameStat = name;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex flex-wrap justify-content-center mt-5\">\r\n            <div className=\"left_powerstats_panel\">\r\n                <h2>Team Stats</h2>\r\n                <h4>{nameStat ? 'High spot: ' + nameStat : ''}</h4>\r\n                <h5>{totalWeight ? 'Average team weight: ' + Math.round(totalWeight) + ' kg' : ''}</h5>\r\n                <h5>{totalHeight ? 'Average team height: ' + Math.round(totalHeight) + ' cm' : 'You don\\'t have any superheroes yet!'}</h5>\r\n            </div>\r\n\r\n            <div className=\"barChart_container\">\r\n                <Bar\r\n                    plugins={[ChartDataLabels]}\r\n                    data={{\r\n                        labels: ['Intelligence', 'Strength', 'Speed', 'Durability', 'Power', 'Combat'],\r\n                        datasets: [{\r\n                            label: 'value',\r\n                            data: [totalStats.intelligence, totalStats.strength, totalStats.speed, totalStats.durability, totalStats.power, totalStats.combat]\r\n                            ,\r\n                            barPercentage: 0.8,\r\n                            categoryPercentage: 0.8,\r\n                            backgroundColor: ['rgba(255, 75, 127,0.3)'],\r\n                            borderWidth: '2',\r\n                            borderColor: ['rgb(255, 75, 127)'],\r\n                        },\r\n                        ]\r\n\r\n                    }}\r\n                    width={150}\r\n                    height={300}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                        plugins: {\r\n                            datalabels: {\r\n                                color: 'white'\r\n                            },\r\n                            legend: {\r\n                                display: false\r\n                            },\r\n                        },\r\n                        indexAxis: 'y',\r\n                        scales: {\r\n                            x: {\r\n                                grid: { display: false },\r\n                                ticks: { display: false }\r\n                            },\r\n                            y: {\r\n                                grid: { display: false },\r\n                                ticks: {\r\n                                    color: 'white',\r\n                                    font: {\r\n                                        size: 16,\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                    }}\r\n\r\n                />\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Powerstats;","import React, { useState } from 'react';\r\nimport HeroCard from './HeroCard';\r\nimport Powerstats from './Powerstats';\r\nimport './Home.css'\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [updateHome, setUpdateHome] = useState(false);\r\n\r\n    const refresh = () => {\r\n        setUpdateHome(!updateHome);\r\n    }\r\n\r\n    return (\r\n        <div className=\"home_container min-vh-100  d-flex  flex-column align-items-center flex-wrap\">\r\n            <div className=\"container\">\r\n                <Powerstats />\r\n                <HeroCard updateHome={refresh} />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\n\r\nconst Spinner = () =>{\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <span className=\"loader\"></span>       \r\n    </div>\r\n    \r\n);\r\n}\r\n\r\nexport default Spinner;","import React, {useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLock, faAt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Spinner from './Spinner';\r\nrequire('dotenv').config();\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const [loading, setLoading] = useState('');    \r\n    const [connectionErr, setConnectionErr] = useState('');    \r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: ''\r\n            \r\n        },\r\n\r\n        onSubmit: async values => {\r\n        setLoading(<div><Spinner /></div>)\r\n        setTimeout(()=>{setLoading('')},3500);\r\n        try{\r\n            const url = `${process.env.REACT_APP_API_ALKEMY}`;\r\n        const response = await axios.post(url,values);\r\n        console.log(response);\r\n        const token = response.data.token\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('team', JSON.stringify([]));\r\n       \r\n        if(token){\r\n            props.navSwitch('on');\r\n        }\r\n        }catch (err){\r\n            setLoading('');\r\n            setConnectionErr('check your username and password');\r\n            setTimeout(()=>{setConnectionErr('')},3500);\r\n        }   \r\n        \r\n        \r\n\r\n         },\r\n\r\n        validate: values =>{\r\n            let errors = {}\r\n\r\n            if(!values.email){\r\n                errors.email='The field is empty';\r\n            }\r\n\r\n            if(!values.password){\r\n                errors.password='The field is empty';\r\n            }\r\n\r\n            return errors\r\n        }\r\n\r\n    });\r\n\r\n   \r\n    \r\n    return (\r\n        <div className=\"totalContainer\">\r\n            <div className=\"inner-container\">\r\n            <div className=\"panel-left d-none d-lg-flex align-items-center justify-content-center \">\r\n                \r\n                <div className=\"intro w-75 h-50 d-flex flex-column align-items-center justify-content-center  \">\r\n                <h1 className=\"title\">Superheroes</h1>\r\n                    <p className=\"description\">\r\n                    Superheroes is a website that allows you to manage your own team of heroes. You can view his biography, stats and much more.\r\n                    </p>\r\n                    <a class=\"firm\" href=\"https://github.com/ferjulian\">Created by Fernando Julian</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"panel-right d-flex align-items-center justify-content-center \">\r\n                <div className=\"form-wrapper\">\r\n                    <h3 className=\"mobile_title\">Superheroes</h3>\r\n                <form className=\"custom_form\" onSubmit={formik.handleSubmit}>\r\n                    <h2 className=\"login-title\">Login</h2>\r\n                    <div className=\"input-wrapper\">\r\n                    <label htmlFor='email' className=\"icon\"><FontAwesomeIcon icon={faAt} color=\"rgba(255, 255, 255, 0.534)\" size=\"2x\" /></label>\r\n            <input \r\n                type='email' \r\n                name='email'\r\n                className=\"input\" \r\n                placeholder=\"email\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                values={formik.values.email}\r\n            />\r\n                    </div>\r\n                    <div className=\"input-wrapper\">\r\n                    <label htmlFor='Password' className=\"icon\"><FontAwesomeIcon icon={faLock} color=\"rgba(255, 255, 255, 0.534)\" size=\"2x\" /></label>\r\n            <input \r\n                type='password' \r\n                name='password' \r\n                placeholder=\"password\"\r\n                className=\"input\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                values={formik.values.password}\r\n            />\r\n                    </div>\r\n                    {formik.touched.email && formik.errors.email? <div className=\"errorMsg\">{formik.errors.email}</div> : null}\r\n                    {formik.touched.password && formik.errors.password? <div className=\"errorMsg\">{formik.errors.password}</div> : null}\r\n                    {connectionErr? <div className=\"errorMsg\">{connectionErr}</div> : ''}\r\n                    <button type=\"submit\">Submit</button>\r\n                    {loading? loading : ''}\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n             {localStorage.getItem('token') ? <Redirect to=\"/Home\" /> : ''}\r\n             </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport './styles.css';\r\nimport './SearchCard.css';\r\n\r\nconst SearchCard = ({ heroObj }) => {\r\n\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [hover, setHover] = useState('');\r\n\r\n    const onButtonClick = () => {\r\n\r\n        const getHeroes = localStorage.getItem('team');\r\n\r\n        if (getHeroes) {\r\n\r\n            let team = JSON.parse(getHeroes);\r\n            let numHeroes = team.length;\r\n            let goodAlignment = 0;\r\n            let badAlignment = 0;\r\n            let heroExist = false;\r\n\r\n            //Validations\r\n\r\n            team.forEach(hero => {\r\n\r\n                if (hero.biography.alignment === 'good') {\r\n                    goodAlignment++\r\n                } else {\r\n                    badAlignment++\r\n                }\r\n\r\n                if (heroObj.id === hero.id) {\r\n                    heroExist = true;\r\n                }\r\n\r\n            });\r\n\r\n\r\n            if (numHeroes < 6) {\r\n\r\n                //Repeated hero\r\n\r\n                if (!heroExist) {\r\n\r\n                    // Bad/Good Alignment validation\r\n\r\n                    if (heroObj.biography.alignment === 'bad') {\r\n\r\n                        if (badAlignment < 3) {\r\n\r\n                            storeInLS(team, heroObj);\r\n                            setSuccess('Success');\r\n                            setTimeout(() => { setSuccess('') }, 3500)\r\n\r\n                        } else {\r\n                            setError('You can only enter 3 heroes with bad alignment.');\r\n                            setTimeout(() => { setError('') }, 3500)\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (goodAlignment < 3) {\r\n\r\n                            storeInLS(team, heroObj);\r\n                            setSuccess('Success');\r\n                            setTimeout(() => { setSuccess('') }, 3500)\r\n\r\n                        } else {\r\n                            setError('You can only enter 3 heroes with good alignment.');\r\n                            setTimeout(() => { setError('') }, 3500)\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n\r\n                } else {\r\n                    setError('This hero is already on your team.');\r\n                    setTimeout(() => { setError('') }, 3500)\r\n                }\r\n\r\n\r\n\r\n            } else {\r\n\r\n                setError('The team is full.');\r\n                setTimeout(() => { setError('') }, 3500)\r\n            }\r\n\r\n        } else {\r\n            let team = [];\r\n            storeInLS(team, heroObj)\r\n\r\n        }\r\n\r\n\r\n        function storeInLS(team, heroObj) {\r\n            team.push(heroObj);\r\n            let saveTeam = JSON.stringify(team);\r\n            localStorage.setItem('team', saveTeam);\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div\r\n            className=\"card d-inline-block\"\r\n            onMouseOver={() => setHover('hover')}\r\n            onMouseLeave={() => setHover('')}\r\n        >\r\n            <img className=\"SearchCard_image\" src={heroObj.image.url} alt=\"hero\" />\r\n            <div className={`card-body ${hover}`}>\r\n                <span>\r\n                    <h5 className=\"text\">{heroObj.name}</h5>\r\n                    <button className=\"SearchCard_button\" onClick={() => onButtonClick()}>Add</button>\r\n                </span>\r\n\r\n                <div className='errorMsg'>{error}</div>\r\n                <div className=\"successMsg\">{success}</div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default SearchCard;","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport SearchCard from './SearchCard';\r\nimport './Search.css'\r\nimport Spinner from './Spinner';\r\nrequire('dotenv').config();\r\n\r\nconst Search = () => {\r\n\r\n\r\n    const [displayHeroes, setDisplayHeroes] = useState('');\r\n    const [apiError, setApiError] = useState('')\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            search: ''\r\n        },\r\n\r\n        onSubmit: async values => {\r\n\r\n            const url = `https://superheroapi.com/api/${process.env.REACT_APP_API_KEY}/search/${values.search}`;\r\n            setDisplayHeroes(<div><Spinner /></div>)\r\n            try {\r\n\r\n                const response = await axios.get(url);\r\n                const arrayHeroes = response.data.results;\r\n\r\n                if (response.data.response !== 'error') {\r\n                    const heroes = arrayHeroes.map((hero, index) => {\r\n                        return (\r\n                            <div key={index} className=\"d-inline-block\">\r\n                                <SearchCard heroObj={hero} />\r\n                            </div>\r\n\r\n                        )\r\n                    });\r\n\r\n                    setDisplayHeroes(heroes);\r\n                } else {\r\n                    setDisplayHeroes('');\r\n                    setApiError(response.data.error);\r\n                    setTimeout(() => { setApiError('') }, 3500)\r\n                }\r\n\r\n            } catch (err) {\r\n                setDisplayHeroes('');\r\n                setApiError(`${err}`);\r\n                setTimeout(() => { setApiError('') }, 3500)\r\n            }\r\n\r\n\r\n        },\r\n        validate: values => {\r\n            let errors = {}\r\n\r\n            if (!values.search) {\r\n                errors.search = 'The field is empty';\r\n            }\r\n\r\n            return errors\r\n        }\r\n\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"search_container container min-vh-100  d-flex  flex-column align-items-center\">\r\n            <div className=\"w-100 d-flex  flex-column align-items-center\">\r\n                <form className=\"d-flex  flex-column\" onSubmit={formik.handleSubmit}>\r\n                    <h2 className=\"title_search\" >Search</h2>\r\n                    <p className=\"p_search\">find your favorite heroes and build your team</p>\r\n                    <input\r\n                        className=\"searchBar\"\r\n                        type=\"text\"\r\n                        name=\"search\"\r\n                        placeholder=\"Maybe, Batman?\"\r\n                        onChange={formik.handleChange}\r\n                        values={formik.values.search}\r\n                    />\r\n                    {formik.touched.search && formik.errors.search ? <div className=\"errorMsg\">{formik.errors.search}</div> : null}\r\n                    {apiError ? <div className=\"errorMsg\">{apiError}</div> : ''}\r\n                    <button className=\"search_button\" type=\"submit\">Get</button>\r\n                </form>\r\n            </div>\r\n                <div className=\"container d-flex justify-content-center align-items-center flex-wrap\">\r\n                    {displayHeroes}\r\n                </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './DetailsInfo.css';\r\n\r\n\r\n\r\nconst DetailsInfo = (props) =>{\r\n\r\n    const location = useLocation()\r\n    \r\n\r\n    return(\r\n        <div className=\"containerr\">\r\n            <div className=\"wrapper\">\r\n            <div className=\"info-wrapper\">\r\n            <div className=\"inner\">\r\n            <h2>Hero details</h2>\r\n            <h4><span>Name:</span> {location.state.hero.name}</h4>\r\n            <h4><span>Alias:</span> {location.state.hero.biography.aliases[0]}</h4>\r\n            <h4><span>Height:</span> {location.state.hero.appearance.height[1]}</h4>\r\n            <h4><span>Weight:</span> {location.state.hero.appearance.weight[1]}</h4>\r\n            <h4><span>Eye color:</span> {location.state.hero.appearance[\"eye-color\"]}</h4>\r\n            <h4><span>Hair color:</span> {location.state.hero.appearance[\"hair-color\"]}</h4>\r\n            <h4><span>Work base:</span> {location.state.hero.work.base}</h4>\r\n            </div>\r\n            </div>\r\n            <div className=\"img-wrapper\">\r\n            <img className= \"img-details\" src={location.state.hero.image.url} alt=\"heroImg details\"></img>\r\n            </div>\r\n            </div>   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsInfo;","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport DetailsInfo from './DetailsInfo';\r\n\r\n\r\n\r\nconst Details = (props) =>{\r\n\r\n    const location = useLocation()\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n\r\n            {location.state? <DetailsInfo/> : <h5>You haven't selected any hero yet.</h5> }    \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Details;","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nconst PrivateRoute = (props) =>{\r\n\r\n    const user = localStorage.getItem('token');\r\n\r\n    return(\r\n\r\n        \r\n        <Route exac={props.exac} path={props.path}>\r\n            {user ? <props.Component /> : <Redirect to=\"/Login\" /> }\r\n        </Route> \r\n        \r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport './BurgerButton.css';\r\n\r\nconst BurgerButton = (props) =>{\r\n\r\n    return(\r\n        <div className=\"burguer\">\r\n        <div onClick={props.handleClick} \r\n             className={`hamburger ${props.clicked ? 'is-active': ''}`} \r\n             id=\"hamburger-11\"\r\n        >\r\n          <span className=\"line\"></span>\r\n          <span className=\"line\"></span>\r\n          <span className=\"line\"></span>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BurgerButton;","import React,{useState} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport BurgerButton from './BurgerButton'\r\nimport './Navbar.css';\r\n\r\n\r\nconst Navbar = (props) =>{\r\n\r\nconst [loginPage, setLoginPage] = useState(false);\r\nconst [clicked, setClicked] = useState(false);\r\n\r\nconst onButtonClick = () => {\r\n  localStorage.removeItem('team');\r\n  localStorage.removeItem('token');\r\n  setLoginPage(!loginPage);\r\n  props.navSwitch('off');\r\n}\r\n\r\nconst handleClick = () =>{\r\n\r\n    setClicked(!clicked);\r\n}\r\n\r\nreturn(\r\n    <div>\r\n            \r\n    <nav className=\"navbar fixed-top navbar-expand-lg navbar-expand-sm navbar-dark bg-dark\">\r\n    <a className=\"navbar_brand\" href=\"/Home\">Superheroes</a>\r\n    \r\n    <div className={`link-wrapper ${clicked? 'showLinks-mobile': ''}`}>\r\n    <Link to=\"/Home\" onClick={() => handleClick()} >Home</Link>\r\n    <Link to=\"/Search\" onClick={() => handleClick()}>Search</Link>\r\n    <button className=\"signOutBtn\" onClick={() => onButtonClick()}>Sign out</button>\r\n    \r\n    </div>\r\n    <BurgerButton clicked={clicked} handleClick={handleClick} />\r\n      \r\n    </nav>\r\n\r\n    {loginPage === true? <Redirect to=\"/Login\"/> : ''}\r\n            \r\n    </div>\r\n    \r\n);\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport Search from './Search';\r\nimport Details from './Details';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport Navbar from './Navbar';\r\n\r\n\r\n\r\nconst App = () =>{\r\n\r\n    \r\nconst [nav, setNav] = useState('');\r\n\r\n    const onButtonClick = (arg) => { \r\n        if(arg === 'on'){\r\n            setNav(arg);\r\n            \r\n        }else if(arg === 'off'){\r\n            setNav(arg);\r\n        }\r\n        \r\n    }\r\n    \r\n    const data = localStorage.getItem('team');\r\n\r\n    \r\n    return(\r\n        <div>\r\n            <Router>\r\n            { data ? <Navbar navSwitch={onButtonClick} /> : ''}\r\n            <Switch>\r\n            \r\n                <PrivateRoute exac path=\"/Home\" Component={Home}/>\r\n                <PrivateRoute exac path=\"/Search\" Component={Search}/>\r\n                <PrivateRoute exac path=\"/Details\" Component={Details} />\r\n                <Route exac path=\"/\">\r\n                <Login navSwitch={onButtonClick}/>    \r\n                </Route>   \r\n            </Switch>\r\n        </Router>\r\n            \r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDom.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}